/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     public int val;
 *     public TreeNode left;
 *     public TreeNode right;
 *     public TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public int MinDepth(TreeNode root) {
        return MinDepth(root, 0);
    }
    
    private int MinDepth(TreeNode root, int depth) {
        if (root == null) {
            return depth;
        }
        
        int lDepth = MinDepth(root.left, depth + 1);
        int rDepth = MinDepth(root.right, depth + 1);
        
        if (root.right == null && root.left != null) {
            return lDepth; 
        }
        
        if (root.left == null && root.right != null) {
            return rDepth;
        }
        
        return Math.Min(lDepth, rDepth);
    }
}
