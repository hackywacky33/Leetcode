// https://leetcode.com/problems/maximum-binary-tree/submissions/
public class Solution {
    public TreeNode ConstructMaximumBinaryTree(int[] nums) {
        return ConstructMaximumBinaryTree(nums, 0, nums.Length-1);
    }
    
    public TreeNode ConstructMaximumBinaryTree(int[] nums, int left, int right) {
        if (right < left) {
            return null;
        }
        
        int maxIndex = left;
        for (int i=left+1; i<=right; i++) {
            if (nums[i] > nums[maxIndex]) {
                maxIndex = i;
            }
        }
        
        TreeNode leftNode = ConstructMaximumBinaryTree(nums, left, maxIndex-1);
        TreeNode rightNode = ConstructMaximumBinaryTree(nums, maxIndex+1, right);
        
        TreeNode rootNode = new TreeNode(nums[maxIndex]);
        rootNode.left = leftNode;
        rootNode.right = rightNode;
        
        return rootNode;
    }
}
